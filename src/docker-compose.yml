name: leeve-prod
services:
  db:
    hostname: db
    image: mongo
    expose:
      - 27017
    ports:
      - 30150:27017
    volumes:
      - volume:/data/db
    networks:
      leeve_net:
        ipv4_address: 20.1.1.1
    restart: always
    command: mongod --replSet leeve-set --bind_ip 20.1.1.1
  db-init:
    image: mongo
    restart: 'no'
    depends_on:
      - db
    networks:
      leeve_net:
        ipv4_address: 20.1.1.2
    command: >
      mongosh --host db:27017 --eval
      '
      db = (new Mongo("20.1.1.1:27017")).getDB("admin");
      config = {
      "_id" : "leeve-set",
      "members" : [
        {
          "_id" : 0,
          "host" : "db:27017"
        }
      ]
      };
      rs.initiate(config);
      '
  service:
    hostname: service
    image: leeve.server
    depends_on:
      - db
    environment:
      - ASPNETCORE_URLS=
      - ASPNETCORE_ENVIRONMENT=Development
      - LEEVE_SERVICE_IP=20.1.1.1
      - LEEVE_SERVICE_PORT=27017
    expose:
      - 2701
    ports:
      - 3801:2701
    restart: always
    networks:
      leeve_net:
        ipv4_address: 20.1.1.3

volumes:
  volume:

networks:
  leeve_net:
    driver: bridge
    ipam:
      config:
        - subnet: 20.1.1.0/24
          gateway: 20.1.1.254

# don't forget to publish the project as docker image before running docker-compose up
# dotnet publish --os linux --arch x64 -c release